---
import js from "@/assets/88x31/js.png"

const src = "/88x31.png"
const site = new URL("/", Astro.url)
const fullSrc = new URL(src, Astro.url)

const code = `
<a href="${site}" target="_blank" style="image-rendering:pixelated">
    <img src="${fullSrc}" alt="otomir23's 88x31 button">
</a>
`
---

<friend-button
    code={code}
    class=`relative cursor-pointer
    after:content-['Click_to_copy'] data-[copied]:after:content-['Copied!']
    after:absolute after:left-1/2 after:-top-full after:w-max after:-translate-1/2 after:pointer-events-none
    after:opacity-0 after:translate-y-2 after:scale-75
    hover:after:opacity-100 hover:after:translate-y-0 hover:after:scale-100
    after:px-4 after:py-0.5 after:rounded-full after:transition after:text-xs 
    after:bg-white after:text-black after:border after:border-neutral-200 after:shadow
    dark:after:bg-zinc-950 dark:after:text-zinc-100 dark:after:border-zinc-800 dark:after:shadow-none`
>
    <img src={src} alt="My 88x31 Button" />
</friend-button>
<noscript>
    <img src={js.src} alt="Page contains JS!" />
</noscript>

<script>
    class MyFriendButton extends HTMLButtonElement {
        connectedCallback() {
            let dismissTimeout: ReturnType<typeof setTimeout>
            this.addEventListener('click', () => {
                if (dismissTimeout)
                    clearTimeout(dismissTimeout)
                navigator.clipboard.writeText(this.getAttribute("code") ?? "")
                this.setAttribute("data-copied", "true")
                dismissTimeout = setTimeout(() => this.removeAttribute("data-copied"), 1000)
            })
        }
    }

    customElements.define('friend-button', MyFriendButton, { extends: "button" })
</script>
